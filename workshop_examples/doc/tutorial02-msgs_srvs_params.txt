=== ROS Workshop (custom messages) ===
http://wiki.ros.org/ROS/Tutorials
* vytvoreni adresare s packages ve workspace
 mkdir ros_workshop
 rosws set ros_workshop
* vytvoreni package v aktuálním adresáři
 cd ros_workshop
 roscreate-pkg workshop_msgs
* Znovu spáchat "source .../setup.bash" (novy package)
  source ~/rosbuild_ws_hydro/setup.bash
* Otestovat pomoci roscd ??? FUNGUJE ???
  roscd workshop_msgs
* Uvnitr package vytvorit adr. "msg"
 mkdir msg
* Vytvořit message Detections.msg
 int32 FACE=0    # Head detections
 int32 BODY=1    # Whole body regions
 int32 type
 sensor_msgs/RegionOfInterest[] rects
* Info o typech je zde
 http://wiki.ros.org/msg?action=show&redirect=ROS%2FMessage_Description_Language
* Zakladni zpravy
 http://wiki.ros.org/common_msgs?distro=hydro
* Vytvořit message DetectionsStamped.msg
 Header header
 workshop_msgs/Detections detections
* Pridat zavislost na sensor_msgs do manifest.xml
 <depend package="std_msgs"/>
 <depend package="sensor_msgs"/>
* V CMakeLists.txt povolit/odkomentovat generování zpráv
 rosbuild_genmsg()
* Zkusil "zkompilovat"
 rosmake
* A zjistit jestli ROS novy message zna... ??? FUNGUJE ???
 rosmsg show workshop_msgs/Detections

=== ROS Workshop (sending custom messages) ===
* Doplnit do detektoru kód pro publikování zprávy
 ros::NodeHandle n;
 ros::Publisher pub = n.advertise<workshop_msgs::DetectionsStamped>("face_detections_out", 1000);
 
 workshop_msgs::DetectionsStamped msg;
 msg.header.stamp = ros::Time::now();
 msg.header.frame_id = "";
 msg.detections.type = workshop_msgs::Detections::FACE;
 
 sensor_msgs::RegionOfInterest det;
 det.x_offset = 100;
 det.y_offset = 100;
 det.width = 64;
 det.height = 64;
 msg.detections.rects.push_back(det);
 
 pub.publish(msg);
 ROS_INFO_ONCE( "Message sent" );
* Vypis zpráv na zadaném topicu
 rostopic echo /face_detections_out

=== ROS Workshop (service) ===
http://wiki.ros.org/ROS/Tutorials/CreatingMsgAndSrv#Using_srv
http://wiki.ros.org/ROS/Tutorials/WritingServiceClient%28c%2B%2B%29
* V balíčku vytvořit adresář "srv"
* Přidat definici nového servicu, soubor "DetectFaces.srv"
 bool detect_all
 ---
 workshop_msgs/Detections detections
* V CMakeLists.txt povolit generování services
 rosbuild_gensrv()
* Pregenerovat
 rosmake
* Zna ROS message ??? FUNGUJE ???
 rossrv show workshop_examples/DetectFaces
* Do detektoru přidat callback pro servis
 #include <workshop_examples/DetectFaces.h>
 
 bool detect(workshop_examples::DetectFaces::Request  &req,
             workshop_examples::DetectFaces::Response &res
             )
 {
     ROS_INFO_STREAM("Request: detect_all = " << req.detect_all);
 
     res.detections.type = workshop_msgs::Detections::FACE;
 
     sensor_msgs::RegionOfInterest det;
     det.x_offset = 100;
     det.y_offset = 100;
     det.width = 64;
     det.height = 64;
     res.detections.rects.push_back(det);

     ROS_INFO_STREAM("...sending back response.");
     return true;
 }
* Vytvořit service server
 ros::NodeHandle n;
 ros::ServiceServer service = n.advertiseService("detect_faces", detect);
* Zkompilovat
 rosmake
* Spustit
 rosrun workshop_examples example_service
* Vyzkoušet
 rosservice call /detect_faces "detect_all: true"

=== ROS Workshop (launchfile and parameters) ===
* 
